{"ast":null,"code":"import _assertThisInitialized from \"/Users/sigurd/village-defense/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _classCallCheck from \"/Users/sigurd/village-defense/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sigurd/village-defense/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sigurd/village-defense/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sigurd/village-defense/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sigurd/village-defense/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sigurd/village-defense/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nvar WebSocketConnection =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(WebSocketConnection, _Component);\n\n  function WebSocketConnection(props) {\n    var _this;\n\n    _classCallCheck(this, WebSocketConnection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(WebSocketConnection).call(this, props));\n    _this.connection = new WebSocket('ws://127.0.0.1:1337');\n    _this.connection.onopen = _this.onOpen;\n    _this.connection.onerror = _this.onError;\n    _this.connection.onmessage = _this.onMessage;\n    return _this;\n  }\n\n  _createClass(WebSocketConnection, [{\n    key: \"onOpen\",\n    value: function onOpen() {\n      console.log('Connection is opened...');\n    }\n  }, {\n    key: \"onError\",\n    value: function onError(error) {\n      console.log('Connection error occured!', error);\n    }\n  }, {\n    key: \"onMessage\",\n    value: function onMessage(message) {\n      console.log('message top level');\n      /* \n      try {\n        var json = JSON.parse(message.data);\n      } catch (e) {\n        console.log('Invalid JSON: ', message.data);\n        return;\n      }\n       if (json.type === 'color') { \n        myColor = json.data;\n        status.text(myName + ': ').css('color', myColor);\n        input.removeAttr('disabled').focus();\n        // from now user can start sending messages\n      } else if (json.type === 'history') { // entire message history\n        // insert every single message to the chat window\n        for (var i=0; i < json.data.length; i++) {\n        addMessage(json.data[i].author, json.data[i].text,\n            json.data[i].color, new Date(json.data[i].time));\n        }\n      } else if (json.type === 'message') { // it's a single message\n        // let the user write another message\n        input.removeAttr('disabled'); \n        addMessage(json.data.author, json.data.text,\n                   json.data.color, new Date(json.data.time));\n      } else {\n        console.log('Untyped JSON message:', json);\n      }\n      */\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Chat, {\n        connection: this.connection,\n        onMessage: this.onMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return WebSocketConnection;\n}(Component);\n\nvar Chat =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(Chat, _Component2);\n\n  function Chat(props) {\n    var _this2;\n\n    _classCallCheck(this, Chat);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(Chat).call(this, props));\n    _this2.handleKeyPress = _this2.handleKeyPress.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.handleChange = _this2.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.state = {\n      chatMessage: '',\n      disabled: '',\n      chatName: false\n    };\n    _this2.input = React.createRef();\n    return _this2;\n  }\n\n  _createClass(Chat, [{\n    key: \"handleKeyPress\",\n    value: function handleKeyPress(e) {\n      console.log('handleChange', e);\n      console.log('e.keyCode', e.keyCode);\n      console.log('e.key', e.key);\n\n      if (e.key === 'Enter') {\n        console.log('this.state.chatMessage', this.state.chatMessage);\n        var chatMessage = this.state.chatMessage;\n\n        if (!chatMessage) {\n          return;\n        }\n\n        this.props.connection.send(chatMessage);\n        this.setState({\n          chatMessage: '',\n          disabled: 'disabled'\n        }); // we know that the first message sent from a user their name  \n\n        if (this.state.chatName === false) {\n          this.setState({\n            chatName: chatMessage\n          });\n        }\n      }\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      this.setState({\n        chatMessage: e.target.value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        id: \"status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Connecting...\"), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"input\",\n        value: this.state.chatMessage,\n        disabled: this.state.disabled,\n        onKeyPress: this.handleKeyPress,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Chat;\n}(Component);\n\nvar App =\n/*#__PURE__*/\nfunction (_Component3) {\n  _inherits(App, _Component3);\n\n  function App(props) {\n    var _this3;\n\n    _classCallCheck(this, App);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this3.state = {\n      counter: 0\n    };\n    return _this3;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(WebSocketConnection, {\n        onMessage: this.onMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/sigurd/village-defense/src/App.js"],"names":["React","Component","WebSocketConnection","props","connection","WebSocket","onopen","onOpen","onerror","onError","onmessage","onMessage","console","log","error","message","Chat","handleKeyPress","bind","handleChange","state","chatMessage","disabled","chatName","input","createRef","e","keyCode","key","send","setState","target","value","App","counter"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass WebSocketConnection extends Component {\n  constructor(props) {\n    super(props);\n\n    this.connection = new WebSocket('ws://127.0.0.1:1337');\n    this.connection.onopen = this.onOpen;\n    this.connection.onerror = this.onError;\n    this.connection.onmessage = this.onMessage;\n  \n  }\n  onOpen() {\n    console.log('Connection is opened...');\n  }\n  onError(error) {\n    console.log('Connection error occured!', error);\n  }\n  onMessage(message) {\n    console.log('message top level');\n    /* \n    try {\n      var json = JSON.parse(message.data);\n    } catch (e) {\n      console.log('Invalid JSON: ', message.data);\n      return;\n    }\n\n    if (json.type === 'color') { \n      myColor = json.data;\n      status.text(myName + ': ').css('color', myColor);\n      input.removeAttr('disabled').focus();\n      // from now user can start sending messages\n    } else if (json.type === 'history') { // entire message history\n      // insert every single message to the chat window\n      for (var i=0; i < json.data.length; i++) {\n      addMessage(json.data[i].author, json.data[i].text,\n          json.data[i].color, new Date(json.data[i].time));\n      }\n    } else if (json.type === 'message') { // it's a single message\n      // let the user write another message\n      input.removeAttr('disabled'); \n      addMessage(json.data.author, json.data.text,\n                 json.data.color, new Date(json.data.time));\n    } else {\n      console.log('Untyped JSON message:', json);\n    }\n    */\n  }\n  render() {\n    return (\n      <Chat \n        connection={this.connection} \n        onMessage={this.onMessage}\n      />\n    );\n   }\n}\n\nclass Chat extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n\n    this.state = {\n      chatMessage: '',\n      disabled: '',\n      chatName: false\n    };\n    this.input = React.createRef();\n  }\n  handleKeyPress(e) {\n    console.log('handleChange', e);\n    console.log('e.keyCode', e.keyCode);\n    console.log('e.key', e.key);\n\n    if (e.key === 'Enter') {\n      console.log('this.state.chatMessage', this.state.chatMessage);\n      let chatMessage = this.state.chatMessage;\n      if (!chatMessage) {\n        return;\n      }\n   \n      this.props.connection.send(chatMessage);\n      this.setState({\n        chatMessage: '',\n        disabled: 'disabled',\n      });\n\n      // we know that the first message sent from a user their name  \n      if (this.state.chatName === false) {\n        this.setState({ chatName: chatMessage });\n      }\n    }\n  }\n  handleChange(e) {\n    this.setState({chatMessage: e.target.value});\n  }\n  render() {\n    return (\n      <div>\n        <div id=\"content\"></div>\n        <div>\n          <span id=\"status\">Connecting...</span>\n          <input \n            type=\"text\" \n            id=\"input\" \n            value={this.state.chatMessage}\n            disabled={this.state.disabled}\n            onKeyPress={this.handleKeyPress}\n            onChange={this.handleChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { counter: 0 };\n  }\n\n  render() {\n    return (\n      <div>\n        <WebSocketConnection onMessage={this.onMessage}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}