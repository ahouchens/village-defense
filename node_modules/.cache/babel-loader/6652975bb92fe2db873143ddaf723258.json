{"ast":null,"code":"import _toConsumableArray from \"/Users/sigurd/village-defense/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/sigurd/village-defense/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sigurd/village-defense/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sigurd/village-defense/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sigurd/village-defense/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sigurd/village-defense/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/sigurd/village-defense/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/sigurd/village-defense/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nvar WebSocketConnection =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(WebSocketConnection, _Component);\n\n  function WebSocketConnection(props) {\n    var _this;\n\n    _classCallCheck(this, WebSocketConnection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(WebSocketConnection).call(this, props));\n    _this.connection = new WebSocket('ws://127.0.0.1:1337');\n    _this.connection.onopen = _this.onOpen;\n    _this.connection.onerror = _this.onError;\n    _this.connection.onmessage = _this.onMessage.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      socketMessage: {\n        data: ''\n      }\n    };\n    return _this;\n  }\n\n  _createClass(WebSocketConnection, [{\n    key: \"onOpen\",\n    value: function onOpen() {\n      console.log('Connection is opened...');\n    }\n  }, {\n    key: \"onError\",\n    value: function onError(error) {\n      console.log('Connection error occured!', error);\n    }\n  }, {\n    key: \"onMessage\",\n    value: function onMessage(message) {\n      this.setState({\n        socketMessage: message\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(Chat, {\n        connection: this.connection,\n        socketMessage: this.state.socketMessage.data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return WebSocketConnection;\n}(Component);\n\nvar Chat =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(Chat, _Component2);\n\n  function Chat(props) {\n    var _this2;\n\n    _classCallCheck(this, Chat);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(Chat).call(this, props));\n    _this2.handleKeyPress = _this2.handleKeyPress.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.handleChange = _this2.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    console.log('constructor socketMessage:::', _this2.props.socketMessage);\n    _this2.state = {\n      chatMessage: '',\n      disabled: '',\n      chatName: false,\n      authorColor: false,\n      chatHistory: []\n    };\n    _this2.input = React.createRef();\n    return _this2;\n  }\n\n  _createClass(Chat, [{\n    key: \"handleKeyPress\",\n    value: function handleKeyPress(e) {\n      if (e.key === 'Enter') {\n        var chatMessage = this.state.chatMessage;\n\n        if (!chatMessage) {\n          return;\n        }\n\n        this.props.connection.send(chatMessage);\n        this.setState({\n          chatMessage: '' // disabled: 'disabled',\n\n        }); // we know that the first message sent from a user their name  \n\n        if (this.state.chatName === false) {\n          this.setState({\n            chatName: chatMessage\n          });\n        }\n      }\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      this.setState({\n        chatMessage: e.target.value\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.socketMessage !== this.props.socketMessage) {\n        var socketMessage = this.socketMessageObject();\n        console.log('socketMessage', socketMessage);\n\n        if (!socketMessage) {\n          return;\n        }\n\n        if (socketMessage.type === 'color') {\n          this.setState({\n            chatName: socketMessage.userName,\n            authorColor: socketMessage.data\n          });\n        }\n\n        if (socketMessage.type === 'history') {\n          this.setState({\n            chatHistory: socketMessage.data\n          });\n        }\n\n        if (socketMessage.type === 'message') {\n          console.log('message type!', socketMessage);\n          this.setState(function (prevState) {\n            return {\n              chatHistory: [].concat(_toConsumableArray(prevState.chatHistory), [socketMessage])\n            };\n          }); // this.setState({ chatHistory: [...this.state.chatHistory, socketMessage.]})\n        }\n        /*\n        } else if (json.type === 'message') { // it's a single message\n          // let the user write another message\n          input.removeAttr('disabled'); \n          addMessage(json.data.author, json.data.text,\n                     json.data.color, new Date(json.data.time));\n        } else {\n          console.log('Untyped JSON message:', json);\n        }\n        */\n\n      }\n    }\n  }, {\n    key: \"socketMessageObject\",\n    value: function socketMessageObject() {\n      try {\n        return JSON.parse(this.props.socketMessage);\n      } catch (e) {\n        console.log('Invalid JSON: ', this.props.socketMessage);\n        return false;\n      }\n    }\n  }, {\n    key: \"isUserConnected\",\n    value: function isUserConnected() {\n      return !!this.socketMessageObject();\n    }\n  }, {\n    key: \"statusText\",\n    value: function statusText() {\n      if (this.state.chatName.length > 0) {\n        return this.state.chatName;\n      }\n\n      return 'Enter name:';\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"this.props.socketMessage: \", this.props.socketMessage, React.createElement(\"div\", {\n        id: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, this.state.chatHistory.map(function (chatHistoryItem) {\n        return React.createElement(\"p\", {\n          key: chatHistoryItem.time,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }, chatHistoryItem.author, \": \", chatHistoryItem.text);\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        id: \"status\",\n        style: {\n          color: this.state.authorColor\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, this.statusText()), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"input\",\n        value: this.state.chatMessage,\n        disabled: this.state.disabled,\n        onKeyPress: this.handleKeyPress,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Chat;\n}(Component);\n\nvar App =\n/*#__PURE__*/\nfunction (_Component3) {\n  _inherits(App, _Component3);\n\n  function App(props) {\n    var _this3;\n\n    _classCallCheck(this, App);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this3.state = {\n      counter: 0\n    };\n    return _this3;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(WebSocketConnection, {\n        socketMessage: this.state.socketMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/sigurd/village-defense/src/App.js"],"names":["React","Component","WebSocketConnection","props","connection","WebSocket","onopen","onOpen","onerror","onError","onmessage","onMessage","bind","state","socketMessage","data","console","log","error","message","setState","Chat","handleKeyPress","handleChange","chatMessage","disabled","chatName","authorColor","chatHistory","input","createRef","e","key","send","target","value","prevProps","socketMessageObject","type","userName","prevState","JSON","parse","length","map","chatHistoryItem","time","author","text","color","statusText","App","counter"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass WebSocketConnection extends Component {\n  constructor(props) {\n    super(props);\n\n    this.connection = new WebSocket('ws://127.0.0.1:1337');\n    this.connection.onopen = this.onOpen;\n    this.connection.onerror = this.onError;\n    this.connection.onmessage = this.onMessage.bind(this);\n\n    this.state = {\n      socketMessage: { data: '' }\n    };\n  \n  }\n  onOpen() {\n    console.log('Connection is opened...');\n  }\n  onError(error) {\n    console.log('Connection error occured!', error);\n  }\n\n  onMessage(message) {\n    this.setState({socketMessage: message});\n  }\n  render() {\n    return (\n      <div>\n        <Chat \n          connection={this.connection}\n          socketMessage={this.state.socketMessage.data}\n        />\n      </div>\n    );\n   }\n}\n\nclass Chat extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    console.log('constructor socketMessage:::', this.props.socketMessage);\n    this.state = {\n      chatMessage: '',\n      disabled: '',\n      chatName: false,\n      authorColor: false,\n      chatHistory: [],\n    };\n    this.input = React.createRef();\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      let chatMessage = this.state.chatMessage;\n      if (!chatMessage) {\n        return;\n      }\n   \n      this.props.connection.send(chatMessage);\n      this.setState({\n        chatMessage: '',\n        // disabled: 'disabled',\n      });\n\n      // we know that the first message sent from a user their name  \n      if (this.state.chatName === false) {\n        this.setState({ chatName: chatMessage });\n      }\n    }\n  }\n  handleChange(e) {\n    this.setState({chatMessage: e.target.value});\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.socketMessage !== this.props.socketMessage) {\n      let socketMessage = this.socketMessageObject();\n      console.log('socketMessage', socketMessage);\n      if (!socketMessage) {\n        return;\n      }\n\n      if (socketMessage.type === 'color') {\n        this.setState({\n          chatName: socketMessage.userName,\n          authorColor: socketMessage.data\n        });\n      }\n\n      if (socketMessage.type === 'history') {\n        this.setState({\n          chatHistory: socketMessage.data\n        });\n      }\n\n      if (socketMessage.type === 'message') {\n        console.log('message type!', socketMessage);\n        \n        this.setState(prevState => ({\n          chatHistory: [...prevState.chatHistory, socketMessage]\n        }))\n        // this.setState({ chatHistory: [...this.state.chatHistory, socketMessage.]})\n      }\n\n    /*\n    } else if (json.type === 'message') { // it's a single message\n      // let the user write another message\n      input.removeAttr('disabled'); \n      addMessage(json.data.author, json.data.text,\n                 json.data.color, new Date(json.data.time));\n    } else {\n      console.log('Untyped JSON message:', json);\n    }\n    */\n\n    }\n  }\n  socketMessageObject() {\n    try {\n      return JSON.parse(this.props.socketMessage);\n    } catch (e) {\n      console.log('Invalid JSON: ', this.props.socketMessage);\n      return false;\n    }\n  }\n  isUserConnected() {\n    return !!this.socketMessageObject();\n  }\n  statusText() {\n    if (this.state.chatName.length > 0) {\n      return this.state.chatName;\n    }\n  \n    return 'Enter name:';\n  }\n  render() {\n    return (\n      <div>\n        this.props.socketMessage: {this.props.socketMessage}\n        <div id=\"content\">\n            {this.state.chatHistory.map((chatHistoryItem) =>\n              <p key={chatHistoryItem.time}>{chatHistoryItem.author}: {chatHistoryItem.text}</p>\n            )}\n        </div>\n        <div>\n          <span \n            id=\"status\" \n            style={{\n              color: this.state.authorColor\n          }}>\n            {this.statusText()}\n          </span>\n          <input \n            type=\"text\" \n            id=\"input\" \n            value={this.state.chatMessage}\n            disabled={this.state.disabled}\n            onKeyPress={this.handleKeyPress}\n            onChange={this.handleChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { counter: 0 };\n  }\n\n  render() {\n    return (\n      <div>\n        <WebSocketConnection socketMessage={this.state.socketMessage}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}