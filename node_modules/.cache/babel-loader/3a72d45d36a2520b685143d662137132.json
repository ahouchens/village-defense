{"ast":null,"code":"import _classCallCheck from \"/Users/sigurd/village-defense/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sigurd/village-defense/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sigurd/village-defense/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sigurd/village-defense/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sigurd/village-defense/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/sigurd/village-defense/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/sigurd/village-defense/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nvar WebSocketConnection =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(WebSocketConnection, _Component);\n\n  function WebSocketConnection(props) {\n    var _this;\n\n    _classCallCheck(this, WebSocketConnection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(WebSocketConnection).call(this, props));\n    _this.connection = new WebSocket('ws://127.0.0.1:1337');\n    _this.connection.onopen = _this.onOpen;\n    _this.connection.onerror = _this.onError;\n    _this.connection.onmessage = _this.onMessage.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    console.log('CONSTRUCTOR');\n    _this.state = {\n      socketMessage: {\n        data: ''\n      }\n    };\n    return _this;\n  }\n\n  _createClass(WebSocketConnection, [{\n    key: \"onOpen\",\n    value: function onOpen() {\n      console.log('Connection is opened...');\n    }\n  }, {\n    key: \"onError\",\n    value: function onError(error) {\n      console.log('Connection error occured!', error);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(nextProps, prevState) {\n      console.log('nextProps', nextProps);\n      console.log('prevState', prevState);\n      return nextProps;\n    }\n  }, {\n    key: \"onMessage\",\n    value: function onMessage(message) {\n      console.log('message top level', message);\n      this.setState({\n        socketMessage: message\n      });\n      /* \n      try {\n        var json = JSON.parse(message.data);\n      } catch (e) {\n        console.log('Invalid JSON: ', message.data);\n        return;\n      }\n       if (json.type === 'color') { \n        myColor = json.data;\n        status.text(myName + ': ').css('color', myColor);\n        input.removeAttr('disabled').focus();\n        // from now user can start sending messages\n      } else if (json.type === 'history') { // entire message history\n        // insert every single message to the chat window\n        for (var i=0; i < json.data.length; i++) {\n        addMessage(json.data[i].author, json.data[i].text,\n            json.data[i].color, new Date(json.data[i].time));\n        }\n      } else if (json.type === 'message') { // it's a single message\n        // let the user write another message\n        input.removeAttr('disabled'); \n        addMessage(json.data.author, json.data.text,\n                   json.data.color, new Date(json.data.time));\n      } else {\n        console.log('Untyped JSON message:', json);\n      }\n      */\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Chat, {\n        connection: this.connection,\n        onMessage: this.onMessage,\n        socketMessage: this.state.socketMessage.data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return WebSocketConnection;\n}(Component);\n\nvar Chat =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(Chat, _Component2);\n\n  function Chat(props) {\n    var _this2;\n\n    _classCallCheck(this, Chat);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(Chat).call(this, props));\n    _this2.handleKeyPress = _this2.handleKeyPress.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.handleChange = _this2.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.onMessage = _this2.onMessage.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    console.log('constructor socketMessage:::', _this2.props.socketMessage);\n    _this2.state = {\n      chatMessage: '',\n      disabled: '',\n      chatName: false\n    };\n    _this2.input = React.createRef();\n    return _this2;\n  }\n\n  _createClass(Chat, [{\n    key: \"handleKeyPress\",\n    value: function handleKeyPress(e) {\n      if (e.key === 'Enter') {\n        var chatMessage = this.state.chatMessage;\n\n        if (!chatMessage) {\n          return;\n        }\n\n        this.props.connection.send(chatMessage);\n        this.setState({\n          chatMessage: '' // disabled: 'disabled',\n\n        }); // we know that the first message sent from a user their name  \n\n        if (this.state.chatName === false) {\n          this.setState({\n            chatName: chatMessage\n          });\n        }\n      }\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      this.setState({\n        chatMessage: e.target.value\n      });\n    }\n  }, {\n    key: \"onMessage\",\n    value: function onMessage(message) {\n      console.log('onMessage in Chat');\n    }\n  }, {\n    key: \"socketMessageObject\",\n    value: function socketMessageObject() {\n      try {\n        return JSON.parse(this.props.socketMessage);\n      } catch (e) {\n        console.log('Invalid JSON: ', this.props.socketMessage);\n        return false;\n      }\n    }\n  }, {\n    key: \"isUserConnected\",\n    value: function isUserConnected() {\n      return !!this.socketMessageObject();\n    }\n  }, {\n    key: \"statusText\",\n    value: function statusText() {\n      if (this.state.chatName.length > 0) {\n        return this.state.chatName;\n      }\n\n      return 'Enter name:';\n    }\n  }, {\n    key: \"statusColor\",\n    value: function statusColor() {\n      if (this.socketMessageObject().type === 'color') {\n        return this.socketMessageObject().data;\n      } else {\n        return false;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"this.props.socketMessage: \", this.props.socketMessage, React.createElement(\"div\", {\n        id: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        id: \"status\",\n        style: {\n          color: this.statusColor()\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, this.statusText()), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"input\",\n        value: this.state.chatMessage,\n        disabled: this.state.disabled,\n        onKeyPress: this.handleKeyPress,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Chat;\n}(Component);\n\nvar App =\n/*#__PURE__*/\nfunction (_Component3) {\n  _inherits(App, _Component3);\n\n  function App(props) {\n    var _this3;\n\n    _classCallCheck(this, App);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this3.state = {\n      counter: 0\n    };\n    return _this3;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(WebSocketConnection, {\n        onMessage: this.onMessage,\n        socketMessage: this.state.socketMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/sigurd/village-defense/src/App.js"],"names":["React","Component","WebSocketConnection","props","connection","WebSocket","onopen","onOpen","onerror","onError","onmessage","onMessage","bind","console","log","state","socketMessage","data","error","nextProps","prevState","message","setState","Chat","handleKeyPress","handleChange","chatMessage","disabled","chatName","input","createRef","e","key","send","target","value","JSON","parse","socketMessageObject","length","type","color","statusColor","statusText","App","counter"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass WebSocketConnection extends Component {\n  constructor(props) {\n    super(props);\n\n    this.connection = new WebSocket('ws://127.0.0.1:1337');\n    this.connection.onopen = this.onOpen;\n    this.connection.onerror = this.onError;\n    this.connection.onmessage = this.onMessage.bind(this);\n    console.log('CONSTRUCTOR');\n    this.state = {\n      socketMessage: { data: '' }\n    };\n  \n  }\n  onOpen() {\n    console.log('Connection is opened...');\n  }\n  onError(error) {\n    console.log('Connection error occured!', error);\n  }\n  componentDidUpdate(nextProps, prevState) {\n\n    console.log('nextProps', nextProps);\n    console.log('prevState', prevState);\n\n    return nextProps;\n  }\n  onMessage(message) {\n    console.log('message top level', message);\n    this.setState({socketMessage: message});\n    /* \n    try {\n      var json = JSON.parse(message.data);\n    } catch (e) {\n      console.log('Invalid JSON: ', message.data);\n      return;\n    }\n\n    if (json.type === 'color') { \n      myColor = json.data;\n      status.text(myName + ': ').css('color', myColor);\n      input.removeAttr('disabled').focus();\n      // from now user can start sending messages\n    } else if (json.type === 'history') { // entire message history\n      // insert every single message to the chat window\n      for (var i=0; i < json.data.length; i++) {\n      addMessage(json.data[i].author, json.data[i].text,\n          json.data[i].color, new Date(json.data[i].time));\n      }\n    } else if (json.type === 'message') { // it's a single message\n      // let the user write another message\n      input.removeAttr('disabled'); \n      addMessage(json.data.author, json.data.text,\n                 json.data.color, new Date(json.data.time));\n    } else {\n      console.log('Untyped JSON message:', json);\n    }\n    */\n  }\n  render() {\n    return (\n      <div>\n        <Chat \n          connection={this.connection}\n          onMessage={this.onMessage}\n          socketMessage={this.state.socketMessage.data}\n        />\n      </div>\n    );\n   }\n}\n\nclass Chat extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.onMessage = this.onMessage.bind(this);\n    console.log('constructor socketMessage:::', this.props.socketMessage);\n    this.state = {\n      chatMessage: '',\n      disabled: '',\n      chatName: false\n    };\n    this.input = React.createRef();\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      let chatMessage = this.state.chatMessage;\n      if (!chatMessage) {\n        return;\n      }\n   \n      this.props.connection.send(chatMessage);\n      this.setState({\n        chatMessage: '',\n        // disabled: 'disabled',\n      });\n\n      // we know that the first message sent from a user their name  \n      if (this.state.chatName === false) {\n        this.setState({ chatName: chatMessage });\n      }\n    }\n  }\n  handleChange(e) {\n    this.setState({chatMessage: e.target.value});\n  }\n  onMessage(message) {\n    console.log('onMessage in Chat');\n  }\n  socketMessageObject() {\n    try {\n      return JSON.parse(this.props.socketMessage);\n    } catch (e) {\n      console.log('Invalid JSON: ', this.props.socketMessage);\n      return false;\n    }\n  }\n  isUserConnected() {\n    return !!this.socketMessageObject();\n  }\n  statusText() {\n    if (this.state.chatName.length > 0) {\n      return this.state.chatName;\n    }\n  \n    return 'Enter name:';\n  }\n  statusColor() {\n    if (this.socketMessageObject().type === 'color') {\n      return this.socketMessageObject().data;\n    } else {\n      return false;\n    }\n  }\n  render() {\n    return (\n      <div>\n        this.props.socketMessage: {this.props.socketMessage}\n        <div id=\"content\"></div>\n        <div>\n          <span \n            id=\"status\" \n            style={{ \n              color: this.statusColor() \n          }}>\n            {this.statusText()}\n          </span>\n          <input \n            type=\"text\" \n            id=\"input\" \n            value={this.state.chatMessage}\n            disabled={this.state.disabled}\n            onKeyPress={this.handleKeyPress}\n            onChange={this.handleChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { counter: 0 };\n  }\n\n  render() {\n    return (\n      <div>\n        <WebSocketConnection onMessage={this.onMessage} socketMessage={this.state.socketMessage}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}